const mysql = require('mysql2/promise');

// Configuraci√≥n de conexi√≥n a la base de datos Aiven
const dbConfig = {
  host: 'mysql-aiven-arenazl.e.aivencloud.com',
  port: 23108,
  user: 'avnadmin',
  password: 'AVNS_Fqe0qsChCHnqSnVsvoi',
  database: 'gastro'
};

async function addIconColumns() {
  let connection;
  
  try {
    console.log('Conectando a la base de datos...');
    connection = await mysql.createConnection(dbConfig);
    
    // 1. Agregar columna icon a subcategories
    console.log('Agregando columna icon a subcategories...');
    try {
      await connection.execute(`
        ALTER TABLE subcategories 
        ADD COLUMN icon VARCHAR(10) DEFAULT NULL
      `);
      console.log('‚úÖ Columna icon agregada a subcategories');
    } catch (error) {
      if (error.code === 'ER_DUP_FIELDNAME') {
        console.log('‚ö†Ô∏è La columna icon ya existe en subcategories');
      } else {
        throw error;
      }
    }

    // 2. Agregar columna icon a categories si no existe
    console.log('Verificando columna icon en categories...');
    try {
      await connection.execute(`
        ALTER TABLE categories 
        ADD COLUMN icon VARCHAR(10) DEFAULT NULL
      `);
      console.log('‚úÖ Columna icon agregada a categories');
    } catch (error) {
      if (error.code === 'ER_DUP_FIELDNAME') {
        console.log('‚ö†Ô∏è La columna icon ya existe en categories');
      } else {
        throw error;
      }
    }

    // 3. Actualizar √≠conos de subcategor√≠as
    console.log('Actualizando √≠conos de subcategor√≠as...');
    const subcategoryUpdates = [
      // Entradas
      [1, '‚ùÑÔ∏è'], // Fr√≠as
      [2, 'üî•'], // Calientes
      [3, 'üå±'], // Vegetarianas
      
      // Sopas
      [4, 'üçú'], // Caldos
      [5, 'ü•õ'], // Cremas
      [6, 'üåç'], // Internacionales
      
      // Platos Principales
      [7, 'ü•©'], // Carnes Rojas
      [8, 'üçó'], // Aves
      [9, 'üêü'], // Pescados
      [10, 'ü¶ê'], // Mariscos
      [11, 'ü•ó'], // Vegetarianos
      
      // Pastas
      [12, 'üçù'], // Pasta Fresca
      [13, 'üçö'], // Risottos
      [14, 'ü•ü'], // Gnocchi
      
      // Postres
      [15, 'üç∞'], // Cl√°sicos
      [16, 'üç®'], // Helados
      [17, '‚ú®'], // Especiales
      
      // Bebidas
      [18, '‚òï'], // Calientes
      [19, 'üßä'], // Fr√≠as
      [20, 'üç∑']  // Alcoh√≥licas
    ];

    for (const [id, icon] of subcategoryUpdates) {
      try {
        await connection.execute(
          'UPDATE subcategories SET icon = ? WHERE id = ?',
          [icon, id]
        );
        console.log(`‚úÖ Subcategor√≠a ${id} actualizada con √≠cono ${icon}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è Error actualizando subcategor√≠a ${id}: ${error.message}`);
      }
    }

    console.log('‚úÖ Columnas de √≠conos actualizadas exitosamente!');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

addIconColumns();